"use strict";(self.webpackChunkveltejs_docs=self.webpackChunkveltejs_docs||[]).push([[8031],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),u=a,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||r;return t?o.createElement(h,i(i({ref:n},p),{},{components:t})):o.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=t(7462),a=(t(7294),t(3905));const r={sidebar_position:9},i="Lifecycle Hooks",s={unversionedId:"essentials/hooks",id:"version-1.1.0/essentials/hooks",title:"Lifecycle Hooks",description:"Every velte component instance goes through a series of initialization steps when it's created, mounted, updated or unmounted. Thus creating a lifecycle for every component. This gives you the ability to input code at any stage of the lifecycle to make components dynamic. For example, performing API calls in the onCreated() hook before the component is mounted.",source:"@site/versioned_docs/version-1.1.0/essentials/hooks.md",sourceDirName:"essentials",slug:"/essentials/hooks",permalink:"/1.1.0/essentials/hooks",draft:!1,editUrl:"https://github.com/RoDDy18/veltejs-docs/tree/main/versioned_docs/version-1.1.0/essentials/hooks.md",tags:[],version:"1.1.0",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Form input Binding",permalink:"/1.1.0/essentials/input"},next:{title:"Components",permalink:"/1.1.0/category/components"}},l={},c=[{value:"<code>onCreated()</code>",id:"oncreated",level:2},{value:"<code>onBeforeMount()</code>",id:"onbeforemount",level:2},{value:"<code>onMounted()</code>",id:"onmounted",level:2},{value:"<code>onUpdated()</code>",id:"onupdated",level:2},{value:"<code>onBeforeUnmount()</code>",id:"onbeforeunmount",level:2},{value:"<code>onUnmounted()</code>",id:"onunmounted",level:2}],p={toc:c},d="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lifecycle-hooks"},"Lifecycle Hooks"),(0,a.kt)("p",null,"Every velte component instance goes through a series of initialization steps when it's created, mounted, updated or unmounted. Thus creating a lifecycle for every component. This gives you the ability to input code at any stage of the lifecycle to make components dynamic. For example, performing API calls in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onCreated()")," hook before the component is mounted."),(0,a.kt)("h2",{id:"oncreated"},(0,a.kt)("inlineCode",{parentName:"h2"},"onCreated()")),(0,a.kt)("p",null,"This hook is called after the component instance has set up reactive data and methods before the component is mounted."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="component.jsx"',title:'"component.jsx"'},'//Inside a class component\n...\nonCreated(){\n    console.log("Component Created")\n}\n')),(0,a.kt)("h2",{id:"onbeforemount"},(0,a.kt)("inlineCode",{parentName:"h2"},"onBeforeMount()")),(0,a.kt)("p",null,"This hook is called after the component instance has set up reactive data and methods before the component is mounted."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="component.jsx"',title:'"component.jsx"'},'//Inside a class component\n...\nonBeforeMount(){\n    console.log("Component Before Mount")\n}\n')),(0,a.kt)("h2",{id:"onmounted"},(0,a.kt)("inlineCode",{parentName:"h2"},"onMounted()")),(0,a.kt)("p",null,"This hook is called after all child components (if any) have been mounted and it's DOM tree has been created and inserted into the ",(0,a.kt)("a",{parentName:"p",href:"/1.1.0/essentials/application#the-root-component"},"root component")," (if any)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="component.jsx"',title:'"component.jsx"'},'//Inside a class component\n...\nonMounted(){\n    console.log("Component Mounted")\n}\n')),(0,a.kt)("h2",{id:"onupdated"},(0,a.kt)("inlineCode",{parentName:"h2"},"onUpdated()")),(0,a.kt)("p",null,"This hook is called after there is an update to it's DOM tree due to ",(0,a.kt)("a",{parentName:"p",href:"essentials/reactivity#reactivity"},"reactive")," state change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="component.jsx"',title:'"component.jsx"'},'//Inside a class component\n...\nonUpdated(){\n    console.log("Component Updated")\n}\n')),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"}," Do not mutate component states in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onUpdated()")," hook, this will likely lead to an infinte update loop.")),(0,a.kt)("h2",{id:"onbeforeunmount"},(0,a.kt)("inlineCode",{parentName:"h2"},"onBeforeUnmount()")),(0,a.kt)("p",null,"This hook allows you to hook into the removal of an element. The hook is called once a vnode is to be removed from the DOM."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="component.jsx"',title:'"component.jsx"'},'//Inside a class component\n...\nonBeforeUnmount(){\n    console.log("Component Before Unmount")\n}\n')),(0,a.kt)("h2",{id:"onunmounted"},(0,a.kt)("inlineCode",{parentName:"h2"},"onUnmounted()")),(0,a.kt)("p",null,"This hook is called when all it's DOM elements, child components (if any) if its parent is being removed from the DOM and it's reactive effects have been stopped."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="component.jsx"',title:'"component.jsx"'},'//Inside a class component\n...\nonUnmounted(){\n    console.log("Component Unmounted")\n}\n')))}m.isMDXComponent=!0}}]);