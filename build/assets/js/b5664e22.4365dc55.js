"use strict";(self.webpackChunkveltejs_docs=self.webpackChunkveltejs_docs||[]).push([[2902],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>g});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=o.createContext({}),p=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=p(e.components);return o.createElement(i.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),c=p(t),u=a,g=c["".concat(i,".").concat(u)]||c[u]||d[u]||s;return t?o.createElement(g,l(l({ref:n},m),{},{components:t})):o.createElement(g,l({ref:n},m))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,l=new Array(s);l[0]=u;var r={};for(var i in n)hasOwnProperty.call(n,i)&&(r[i]=n[i]);r.originalType=e,r[c]="string"==typeof e?e:a,l[1]=r;for(var p=2;p<s;p++)l[p]=t[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8228:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>p});var o=t(7462),a=(t(7294),t(3905));const s={sidebar_position:9},l="Lifecycle Hooks",r={unversionedId:"essentials/hooks",id:"version-2.0.0-rc.0/essentials/hooks",title:"Lifecycle Hooks",description:"Every velte component instance or DOM element goes through a series of initialization steps when it's created, mounted, updated or unmounted. Thus creating a lifecycle for every component. This gives you the ability to input code at any stage of the lifecycle to make components dynamic. For example, performing API calls in the onCreated() hook before the component is mounted.",source:"@site/versioned_docs/version-2.0.0-rc.0/essentials/hooks.md",sourceDirName:"essentials",slug:"/essentials/hooks",permalink:"/essentials/hooks",draft:!1,editUrl:"https://github.com/RoDDy18/veltejs-docs/tree/main/versioned_docs/version-2.0.0-rc.0/essentials/hooks.md",tags:[],version:"2.0.0-rc.0",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Form input Binding",permalink:"/essentials/input"},next:{title:"Pub/Sub Events Pattern",permalink:"/essentials/pubsub"}},i={},p=[{value:"<code>onCreated()</code>",id:"oncreated",level:2},{value:"<code>onBeforeMount()</code>",id:"onbeforemount",level:2},{value:"<code>onMounted()</code>",id:"onmounted",level:2},{value:"<code>onBeforeUpdate()</code>",id:"onbeforeupdate",level:2},{value:"<code>onUpdated()</code>",id:"onupdated",level:2},{value:"<code>onBeforeUnmount()</code>",id:"onbeforeunmount",level:2},{value:"<code>onUnmounted()</code>",id:"onunmounted",level:2}],m={toc:p},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lifecycle-hooks"},"Lifecycle Hooks"),(0,a.kt)("p",null,"Every velte component instance or DOM element goes through a series of initialization steps when it's created, mounted, updated or unmounted. Thus creating a lifecycle for every component. This gives you the ability to input code at any stage of the lifecycle to make components dynamic. For example, performing API calls in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onCreated()")," hook before the component is mounted."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"To use lifecycle hooks for function components effectively, ",(0,a.kt)("inlineCode",{parentName:"p"},"$hook")," should be used on the function component's root element when returning jsx:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'const DisplayName = ({name}) =>{\n    return(\n        <div $hook={{\n            onCreated : ()=>{\n                console.log("Component Created")\n            }\n        }}>\n            <p>{name}</p>\n        </div>\n    )\n}\n'))),(0,a.kt)("h2",{id:"oncreated"},(0,a.kt)("inlineCode",{parentName:"h2"},"onCreated()")),(0,a.kt)("p",null,"This hook is called after the component instance has set up reactive data and methods before the component is mounted."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with class component\nclass Component extends VelteComponent{\n    ...\n    onCreated(){\n        console.log("Component Created")\n    }\n    ...\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with function component\n<Component $hook = {{\n    onCreated : ()=>{\n        console.log("Component Created")\n    }\n}}/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with DOM elements\n\n<div $hook={{\n    onCreated : ()=>{\n        console.log("Element Created")\n    }\n}}>\n    ...\n</div>\n')),(0,a.kt)("h2",{id:"onbeforemount"},(0,a.kt)("inlineCode",{parentName:"h2"},"onBeforeMount()")),(0,a.kt)("p",null,"This hook is called after the component instance has set up reactive data and methods before the component is mounted."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with class component\nclass Component extends VelteComponent{\n    ...\n    onBeforeMount(){\n        console.log("Component Before Mount")\n    }\n    ...\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with function component\n<Component $hook = {{\n    onBeforeMount : ()=>{\n        console.log("Component Before Mount")\n    }\n}}/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with DOM elements\n\n<div $hook={{\n    onBeforeMount : ()=>{\n        console.log("Element Before Mount")\n    }\n}}>\n    ...\n</div>\n')),(0,a.kt)("h2",{id:"onmounted"},(0,a.kt)("inlineCode",{parentName:"h2"},"onMounted()")),(0,a.kt)("p",null,"This hook is called after all child components (if any) have been mounted and it's DOM tree has been created and inserted into the ",(0,a.kt)("a",{parentName:"p",href:"/essentials/application#the-root-component"},"root component")," (if any)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with class component\nclass Component extends VelteComponent{\n    ...\n    onMounted(){\n        console.log("Component Mounted")\n    }\n    ...\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with function component\n<Component $hook = {{\n    onMounted : ()=>{\n        console.log("Component Mounted")\n    }\n}}/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with DOM elements\n\n<div $hook={{\n    onMounted : ()=>{\n        console.log("Element Mounted")\n    }\n}}>\n    ...\n</div>\n')),(0,a.kt)("h2",{id:"onbeforeupdate"},(0,a.kt)("inlineCode",{parentName:"h2"},"onBeforeUpdate()")),(0,a.kt)("p",null,"This hook is called before there is an update to it's DOM tree due to ",(0,a.kt)("a",{parentName:"p",href:"essentials/reactivity#reactivity"},"reactive")," state change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with class component\nclass Component extends VelteComponent{\n    ...\n    onBeforeUpdate(){\n        console.log("Before Component Update")\n    }\n    ...\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with function component\n<Component $hook = {{\n    onBeforeUpdate : ()=>{\n        console.log("Before Component Update")\n    }\n}}/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with DOM elements\n\n<div $hook={{\n    onBeforeUpdate : ()=>{\n        console.log("Before Component Update")\n    }\n}}>\n    ...\n</div>\n')),(0,a.kt)("h2",{id:"onupdated"},(0,a.kt)("inlineCode",{parentName:"h2"},"onUpdated()")),(0,a.kt)("p",null,"This hook is called after there is an update to it's DOM tree due to ",(0,a.kt)("a",{parentName:"p",href:"essentials/reactivity#reactivity"},"reactive")," state change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with class component\nclass Component extends VelteComponent{\n    ...\n    onUpdated(){\n        console.log("Component Updated")\n    }\n    ...\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with function component\n<Component $hook = {{\n    onUpdated : ()=>{\n        console.log("Component Updated")\n    }\n}}/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with DOM elements\n\n<div $hook={{\n    onUpdated : ()=>{\n        console.log("Element Updated")\n    }\n}}>\n    ...\n</div>\n')),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"}," Do not mutate component states in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onUpdated()")," hook, this will likely lead to an infinte update loop.")),(0,a.kt)("h2",{id:"onbeforeunmount"},(0,a.kt)("inlineCode",{parentName:"h2"},"onBeforeUnmount()")),(0,a.kt)("p",null,"This hook allows you to hook into the removal of an element. The hook is called once a vnode is to be removed from the DOM."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with class component\nclass Component extends VelteComponent{\n    ...\n    onBeforeUnmount(){\n        console.log("Component Before Unmount")\n    }\n    ...\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with function component\n<Component $hook = {{\n    onBeforeUnmount : ()=>{\n        console.log("Component Before Unmount")\n    }\n}}/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with DOM elements\n\n<div $hook={{\n    onBeforeUnmount : ()=>{\n       console.log("Element Before Unmount")\n    }\n}}>\n    ...\n</div>\n')),(0,a.kt)("h2",{id:"onunmounted"},(0,a.kt)("inlineCode",{parentName:"h2"},"onUnmounted()")),(0,a.kt)("p",null,"This hook is called when all it's DOM elements, child components (if any) if its parent is being removed from the DOM and it's reactive effects have been stopped."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with class component\nclass Component extends VelteComponent{\n    ...\n    onUnmounted(){\n        console.log("Component Unmounted")\n    }\n    ...\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with function component\n<Component $hook = {{\n    onUnmounted : ()=>{\n        console.log("Component Unmounted")\n    }\n}}/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Component.jsx"',title:'"Component.jsx"'},'//usage with DOM elements\n\n<div $hook={{\n    onUnmounted : ()=>{\n      console.log("Element Unmounted")\n    }\n}}>\n    ...\n</div>\n')))}d.isMDXComponent=!0}}]);