"use strict";(self.webpackChunkveltejs_docs=self.webpackChunkveltejs_docs||[]).push([[3956],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,k=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(k,s(s({ref:t},c),{},{components:n})):a.createElement(k,s({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4517:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:4},s="Traits",o={unversionedId:"essentials/traits",id:"essentials/traits",title:"Traits",description:"A common need for setting traits is manipulating an element's class list, its inline styles and data attributes.",source:"@site/docs/essentials/traits.md",sourceDirName:"essentials",slug:"/essentials/traits",permalink:"/next/essentials/traits",draft:!1,editUrl:"https://github.com/RoDDy18/veltejs-docs/tree/main/docs/essentials/traits.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Reactivity",permalink:"/next/essentials/reactivity"},next:{title:"Conditional Rendering",permalink:"/next/essentials/conditions"}},l={},p=[{value:"Class Trait",id:"class-trait",level:2},{value:"Style Trait",id:"style-trait",level:2},{value:"Attribute Trait",id:"attribute-trait",level:2},{value:"Event Trait",id:"event-trait",level:2},{value:"Data Trait",id:"data-trait",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"traits"},"Traits"),(0,r.kt)("p",null,"A common need for setting traits is manipulating an element's class list, its inline styles and data attributes."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"}," Traits are just like ",(0,r.kt)("strong",{parentName:"p"},"properties")," or ",(0,r.kt)("strong",{parentName:"p"},"attributes")," that get passed into elements and components.")),(0,r.kt)("h2",{id:"class-trait"},"Class Trait"),(0,r.kt)("p",null,"These are simply ",(0,r.kt)("inlineCode",{parentName:"p"},"css")," classes defined for elements like ",(0,r.kt)("inlineCode",{parentName:"p"},"<p>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<div>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<img>"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<p className = "classTrait"></p>\n')),(0,r.kt)("p",null,"When using these classes, it is common to import them from ",(0,r.kt)("inlineCode",{parentName:"p"},"css")," files."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/*style.css*/\n.classTraits{\n    color: red;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import "./style/style.css"\nconst App = <p className = "classTrait"></p>\n')),(0,r.kt)("p",null,"The class names can also be stored in variables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import "./style/style.css"\n\nconst myVariable = "classTraits"\nconst App = <p className = {myVariable}></p>\n')),(0,r.kt)("h2",{id:"style-trait"},"Style Trait"),(0,r.kt)("p",null,"These are inline ",(0,r.kt)("inlineCode",{parentName:"p"},"css")," styles defined for elements like ",(0,r.kt)("inlineCode",{parentName:"p"},"<p>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<h1>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<input>"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const App = <p style = {{color:"red"}}></p>\n')),(0,r.kt)("p",null,"The styles can also be stored in variables as objects."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import "./style/style.css"\n\nconst myStyleVariable = {color: "red"}\nconst App = <p style = {myStyleVariable}></p>\n')),(0,r.kt)("h2",{id:"attribute-trait"},"Attribute Trait"),(0,r.kt)("p",null,"These are traits that are not default ",(0,r.kt)("inlineCode",{parentName:"p"},"HTML")," attributes like ",(0,r.kt)("inlineCode",{parentName:"p"},"href")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"src"),". For example, when using a 3rd party library for styling HTML elements, It can have custom attributes for styling them."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'//role would be passed in a data trait\nconst App = <a href="https://lit.dev" role = "button">Go to Lit\'s Website</a>\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"role")," is a custom attribute, but by default velte will read this as a ",(0,r.kt)("a",{parentName:"p",href:"/next/essentials/traits#data-trait"},(0,r.kt)("inlineCode",{parentName:"a"},"component trait")),". To fix this you need to tell velte it's an attribute trait."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'//role would be passed in an attribute trait\nconst App = <a href="https://lit.dev" v-attr:role = "button">Go to Lit\'s Website</a>\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"v-attr:")," directive stands for ",(0,r.kt)("inlineCode",{parentName:"p"},"velte-attribute"),", this would tell velte it's an attribute trait."),(0,r.kt)("h2",{id:"event-trait"},"Event Trait"),(0,r.kt)("p",null,"These traits are event handlers, when a user performs an action like ",(0,r.kt)("inlineCode",{parentName:"p"},"clicking on buttons"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"double clicking on buttons"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"hovers on images")," and even ",(0,r.kt)("inlineCode",{parentName:"p"},"submitting a form"),", these traits are used to perform actions based on what the user's actions.\nTo register an event trait on an element use the ",(0,r.kt)("inlineCode",{parentName:"p"},"v-on")," directive which stands for ",(0,r.kt)("inlineCode",{parentName:"p"},"velte-on")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const App = <button v-on:click={()=>console.log("You clicked me")}>Click me</button>\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"}," Use the Mustache syntax to pass in a callback function to perform an action: ",(0,r.kt)("inlineCode",{parentName:"p"},"{()=>actionFunction()}"),", these can be methods in a ",(0,r.kt)("a",{parentName:"p",href:"/next/components/basics#class-components"},(0,r.kt)("inlineCode",{parentName:"a"},"class component"))," or plain ",(0,r.kt)("inlineCode",{parentName:"p"},"Javascript")," functions")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'//using plain Javascript functions\nfunction sayHi(){\n    console.log("Hi")\n}\n\nconst App = <button v-on:click={()=>sayHi()}>Click me</button>\n')),(0,r.kt)("h2",{id:"data-trait"},"Data Trait"),(0,r.kt)("p",null,"These traits are commonly used to pass in a data into a component, it's what they where build for. They are not ",(0,r.kt)("inlineCode",{parentName:"p"},"attributes")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"directives"),", just plain definitions. Data traits are commonly refered to as ",(0,r.kt)("inlineCode",{parentName:"p"},"traits")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"props")," because they define properties of components or common elements."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'//passing data traits into component\n\nconst App = <CustomComponent myTrait="Hello World"/>\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"}," The code snippet above passes ",(0,r.kt)("inlineCode",{parentName:"p"},'"Hello World"')," into the ",(0,r.kt)("inlineCode",{parentName:"p"},"CustomComponent")," component.")))}d.isMDXComponent=!0}}]);