"use strict";(self.webpackChunkveltejs_docs=self.webpackChunkveltejs_docs||[]).push([[9823],{8484:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"1.0.4","label":"1.0.4","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-1.0.4","isLast":false,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/1.0.4/","docId":"intro"},{"type":"link","label":"Quick Start Guide","href":"/1.0.4/get-started","docId":"get-started"},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Global API","href":"/1.0.4/api/global","docId":"api/global"},{"type":"link","label":"Lifecycle Hooks (Experimental)","href":"/1.0.4/api/hooks","docId":"api/hooks"},{"type":"link","label":"Reactivity","href":"/1.0.4/api/reactivity","docId":"api/reactivity"},{"type":"link","label":"Misc","href":"/1.0.4/api/misc","docId":"api/misc"}],"href":"/1.0.4/category/api-reference"},{"type":"category","label":"Essentials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating a Velte Application","href":"/1.0.4/essentials/application","docId":"essentials/application"},{"type":"link","label":"Velte\'s Syntax","href":"/1.0.4/essentials/syntax","docId":"essentials/syntax"},{"type":"link","label":"Reactivity","href":"/1.0.4/essentials/reactivity","docId":"essentials/reactivity"},{"type":"link","label":"Traits","href":"/1.0.4/essentials/traits","docId":"essentials/traits"},{"type":"link","label":"Conditional Rendering","href":"/1.0.4/essentials/conditions","docId":"essentials/conditions"},{"type":"link","label":"List Rendering","href":"/1.0.4/essentials/list","docId":"essentials/list"},{"type":"link","label":"Event handling","href":"/1.0.4/essentials/events","docId":"essentials/events"},{"type":"link","label":"Form input Binding","href":"/1.0.4/essentials/input","docId":"essentials/input"},{"type":"link","label":"Lifecycle Hooks","href":"/1.0.4/essentials/hooks","docId":"essentials/hooks"}],"href":"/1.0.4/category/essentials"},{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Velte components","href":"/1.0.4/components/basics","docId":"components/basics"},{"type":"link","label":"Component Traits","href":"/1.0.4/components/traits","docId":"components/traits"},{"type":"link","label":"Component Events","href":"/1.0.4/components/events","docId":"components/events"},{"type":"link","label":"Async components","href":"/1.0.4/components/async","docId":"components/async"}],"href":"/1.0.4/category/components"},{"type":"category","label":"Misc","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Rendering","href":"/1.0.4/misc/rendering","docId":"misc/rendering"},{"type":"link","label":"State Managment","href":"/1.0.4/misc/states","docId":"misc/states"},{"type":"link","label":"Routing","href":"/1.0.4/misc/routes","docId":"misc/routes"},{"type":"link","label":"Tooling","href":"/1.0.4/misc/tools","docId":"misc/tools"}],"href":"/1.0.4/category/misc"},{"type":"category","label":"Best Practice","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Scaling Up","href":"/1.0.4/best-practice/scale","docId":"best-practice/scale"},{"type":"link","label":"Production Deployment","href":"/1.0.4/best-practice/deployment","docId":"best-practice/deployment"},{"type":"link","label":"Security","href":"/1.0.4/best-practice/security","docId":"best-practice/security"}],"href":"/1.0.4/category/best-practice"}]},"docs":{"api/global":{"id":"api/global","title":"Global API","description":"VelteElement()","sidebar":"tutorialSidebar"},"api/hooks":{"id":"api/hooks","title":"Lifecycle Hooks (Experimental)","description":"velte 1.0.4 Lifecycle Hooks apply to only Velte Class Components.","sidebar":"tutorialSidebar"},"api/misc":{"id":"api/misc","title":"Misc","description":"APIs tagged with experimental might change without a major version update.","sidebar":"tutorialSidebar"},"api/reactivity":{"id":"api/reactivity","title":"Reactivity","description":"setState()","sidebar":"tutorialSidebar"},"best-practice/deployment":{"id":"best-practice/deployment","title":"Production Deployment","description":"Using Build Tools","sidebar":"tutorialSidebar"},"best-practice/scale":{"id":"best-practice/scale","title":"Scaling Up","description":"To ensure your application scales well as it grows bigger, follow these tips:","sidebar":"tutorialSidebar"},"best-practice/security":{"id":"best-practice/security","title":"Security","description":"Report Vulnerabilities","sidebar":"tutorialSidebar"},"components/async":{"id":"components/async","title":"Async components","description":"To use async/await functionality in velte, simple mark the function or method with the async keyword and perform your async tasks.","sidebar":"tutorialSidebar"},"components/basics":{"id":"components/basics","title":"Velte components","description":"You should always import VelteElement and VelteComponent from velte when using velte components.","sidebar":"tutorialSidebar"},"components/events":{"id":"components/events","title":"Component Events","description":"Using events Listeners in components are the same as using them in elements. check out how to use event handlers","sidebar":"tutorialSidebar"},"components/traits":{"id":"components/traits","title":"Component Traits","description":"Component traits are simply data traits for passing data into a component, nothing special. They are not attributes or directives, just plain definitions.","sidebar":"tutorialSidebar"},"essentials/application":{"id":"essentials/application","title":"Creating a Velte Application","description":"velte applications are structured with components made with JSX and Javascript.","sidebar":"tutorialSidebar"},"essentials/conditions":{"id":"essentials/conditions","title":"Conditional Rendering","description":"This is literally what it sounds like, \\"I would only render something when a condition is true, if not i\'ll render something else\\". This makes our web apps more dynamic.","sidebar":"tutorialSidebar"},"essentials/events":{"id":"essentials/events","title":"Event handling","description":"when a user performs an action like clicking on buttons, double clicking on buttons, hovers on images and even submitting a form, our application can react to those actions known as events.","sidebar":"tutorialSidebar"},"essentials/hooks":{"id":"essentials/hooks","title":"Lifecycle Hooks","description":"To use lifecycle hook in velte 1.0.4, it has to be inside a class component and NOT a function component, These hooks are inherited from VelteComponent.","sidebar":"tutorialSidebar"},"essentials/input":{"id":"essentials/input","title":"Form input Binding","description":"You can bind form input traits like value to variables. When this is done, the value of the variable would be assigned to form input trait.","sidebar":"tutorialSidebar"},"essentials/list":{"id":"essentials/list","title":"List Rendering","description":"This is simply looping through an array of items for rendering or performing functions.","sidebar":"tutorialSidebar"},"essentials/reactivity":{"id":"essentials/reactivity","title":"Reactivity","description":"velte\'s reactivity comes from Velte.updater() in @velte/dom which takes in the oldVnode and newVnode  to render after diffing this makes velte intelligently choose what parts of your components needs to be re-rendered, which out re-rendering everything.","sidebar":"tutorialSidebar"},"essentials/syntax":{"id":"essentials/syntax","title":"Velte\'s Syntax","description":"Velte uses an HTML-based template syntax JSX) that allows you to declaratively bind the rendered DOM to the underlying component instance\'s data. All velte templates are syntactically valid HTML that can be parsed by spec-compliant browsers and HTML parsers.","sidebar":"tutorialSidebar"},"essentials/traits":{"id":"essentials/traits","title":"Traits","description":"A common need for setting traits is manipulating an element\'s class list, its inline styles and data attributes.","sidebar":"tutorialSidebar"},"get-started":{"id":"get-started","title":"Quick Start Guide","description":"The rest of the documentation assumes basic familiarity with HTML, CSS, and JavaScript. If you are totally new to frontend development, it might not be the best idea to jump right into a framework as your first step - grasp the basics and then come back! You can check your knowledge level with this JavaScript overview. Prior experience with other frameworks helps, but is not required.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Velte is a small, performant and easy-to-use frontend JavaScript framework with a declarative and component-based model building on top of standard HTML, CSS, and JavaScript for developing User Interfaces. velte in no way tries to reinvent the wheel, It takes the wheel and makes it easier to roll with. In summary, It\'s your typical modern framework or library but friendlier.","sidebar":"tutorialSidebar"},"misc/rendering":{"id":"misc/rendering","title":"Rendering","description":"Client-Side Rendering","sidebar":"tutorialSidebar"},"misc/routes":{"id":"misc/routes","title":"Routing","description":"This is used in making single page applications, literally with only one HTML page. When the user makes a request for a new page like /about , The router would remove the \\"current page\\" and display the about page information on the same HTML page.","sidebar":"tutorialSidebar"},"misc/states":{"id":"misc/states","title":"State Managment","description":"Every velte component instance already \\"manages\\" its own reactive state. Take a simple counter component as an example:","sidebar":"tutorialSidebar"},"misc/tools":{"id":"misc/tools","title":"Tooling","description":"Various ways you can use velte for your next project.","sidebar":"tutorialSidebar"}}}')}}]);